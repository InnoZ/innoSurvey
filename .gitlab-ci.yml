image: docker:latest
services:
- docker:dind

stages:
- build
- test
- sec-test
- release

variables:
  DOCKER_DRIVER: overlay2
  TEST_IMAGE:           $CI_REGISTRY_IMAGE:test
  RELEASE_IMAGE_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA
  RELEASE_IMAGE_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest


before_script:
    - docker info
    - docker version
    - printenv
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

build:
  stage: build
  script:
    - docker pull $TEST_IMAGE || true
    - docker build --cache-from $TEST_IMAGE -t $TEST_IMAGE .
    - docker push $TEST_IMAGE

#test-rubocop:
#  stage: test
#  script:
#    - docker pull $TEST_IMAGE
#    - docker run $TEST_IMAGE  bundle exec rubocop

test-rspec:
  stage: test
  script:
    - docker pull $TEST_IMAGE
    - docker run -e RAILS_ENV=test $TEST_IMAGE  bundle exec rails db:test:prepare
    - docker run -e RAILS_ENV=test $TEST_IMAGE  bundle exec rspec

test-brakeman:
  stage: sec-test
  script:
    - docker pull $TEST_IMAGE
    - docker run  $TEST_IMAGE  bundle exec brakeman
    - docker run  $TEST_IMAGE  bundle exec bundle audit update && bundle exec bundle audit check 

container_scanning:
  stage: sec-test
  allow_failure: true
  script:
    - docker run -d --name db arminc/clair-db:latest
    - docker run -p 6060:6060 --link db:postgres -d --name clair --restart on-failure arminc/clair-local-scan:v2.0.1
    - apk add -U wget ca-certificates
    - docker pull $TEST_IMAGE
    - wget https://github.com/arminc/clair-scanner/releases/download/v8/clair-scanner_linux_amd64
    - mv clair-scanner_linux_amd64 clair-scanner
    - chmod +x clair-scanner
    - touch clair-whitelist.yml
    - while( ! wget -q -O /dev/null http://docker:6060/v1/namespaces ) ; do sleep 1 ; done
    - retries=0
    - echo "Waiting for clair daemon to start"
    - while( ! wget -T 10 -q -O /dev/null http://docker:6060/v1/namespaces ) ; do sleep 1 ; echo -n "." ; if [ $retries -eq 10 ] ; then echo " Timeout, aborting." ; exit 1 ; fi ; retries=$(($retries+1)) ; done
    - ./clair-scanner -c http://docker:6060 --ip $(hostname -i) -r gl-container-scanning-report.json -l clair.log -w clair-whitelist.yml $TEST_IMAGE || true
  artifacts:
    paths: [gl-container-scanning-report.json]

push-release:
  stage: release
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $RELEASE_IMAGE_LATEST
    - docker tag $TEST_IMAGE $RELEASE_IMAGE_COMMIT
    - docker push $RELEASE_IMAGE_LATEST
    - docker push $RELEASE_IMAGE_COMMIT
  when: on_success
  only:
    - branches
