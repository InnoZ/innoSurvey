image: ruby:latest

variables:
  POSTGRES_USER: innoSurvey
  POSTGRES_PASSWORD: this_is_for_test_only
  POSTGRES_DB: innoSurvey

stages:
#  - lint
  - test
  - build


#lint:
#  stage: lint
#  image: kennethreitz/pipenv
#  script:
#    - pipenv install -d
#    - pipenv run check

    #test-with-rspec:
    #  before_script:
    #    # Install basic deps
    #    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    #    - apt-get update -qq && apt-get install -y -qq curl gnupg2 apt-transport-https build-essential cmake nodejs software-properties-common
    #      # Install yarn
    #    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    #    - echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list
    #    - apt-get update -qq && apt-get install -y -qq libsqlite3-dev phantomjs yarn nodejs
    #    - ruby -v
    #    - which ruby
    #    - gem install bundler --no-ri --no-rdoc
    #    - RAILS_ENV=test bundle install --jobs $(nproc) "${FLAGS[@]}"
    #    - yarn install
    #    - yarn global add phantomjs-prebuilt
    #    - RAILS_ENV=test bundle exec rails db:create db:schema:load  
    #  stage: test
    #  script:
    #    - RAILS_ENV=test bundle exec rspec

build-docker-image:
  image: docker:stable
  services:
    - docker:dind
  stage: build
  before_script:
    - docker info
    - docker version
  when: on_success
  only:
    - branches
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker tag $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_IMAGE:$CI_BUILD_TAG
    - docker push $CI_REGISTRY_IMAGE:$CI_BUILD_TAG
